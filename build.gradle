plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'org.web3j' version '4.4.0'
    id "com.diffplug.gradle.spotless" version "3.25.0"
    id 'io.codearte.nexus-staging' version '0.21.1'
    id "de.marcphilipp.nexus-publish" version "0.4.0"
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id "de.undercouch.download" version "4.0.0"
}

description 'Web3j-unit extension'

ext {
    web3jVersion = version
    kotlinLoggingVersion = '1.6.24'
    logbackVersion = '1.2.3'
    junitVersion = '5.5.2'
    mockitoKotlinVersion = '1.6.0'
    testContainersVersion = '1.12.0'
}

nexusStaging {
    username System.getenv('OSSRH_USERNAME')
    password System.getenv('OSSRH_PASSWORD')
}

apply {
    [
        'jacoco',
        'java',
        'javadoc',
        'repositories',
        'publish',
        'spotless',
    ].each { buildScript ->
        download {
            src "https://raw.githubusercontent.com/web3j/build-tools/master/gradle/$buildScript/build.gradle"
            dest "$rootDir/gradle/$buildScript/build.gradle"
            overwrite true
            quiet true
            onlyIfModified true
        }
        from("$rootDir/gradle/$buildScript/build.gradle")
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            pom {
                scm {
                    url = "https://github.com/web3j/web3j-unit"
                    connection = "scm:https://github.com/web3j/web3j-unit.git"
                    developerConnection = "scm:git://github.com/web3j/web3j-unit.git"
                }
            }
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
            "org.web3j:core:$web3jVersion",
            "org.web3j:web3j-evm:$web3jVersion",
            "org.testcontainers:testcontainers:$testContainersVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion",
            "io.github.microutils:kotlin-logging:$kotlinLoggingVersion",
            "ch.qos.logback:logback-classic:$logbackVersion"
}

web3j {
    generatedPackageName = 'org.web3j.{0}'
    excludedContracts = ['Mortal']
}

compileKotlin {
    dependsOn "generateContractWrappers"
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    dependsOn "generateTestContractWrappers"
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
